// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My_Fight_APP;

namespace My_Fight_APP.Migrations
{
    [DbContext(typeof(FlightDbContext))]
    partial class FlightDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("My_Fight_APP.Models.FlightModelOneWay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Flight_Id")
                        .HasColumnType("int");

                    b.Property<int?>("OneWayId")
                        .HasColumnType("int");

                    b.Property<int>("OneWayTicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Flight_Id");

                    b.HasIndex("OneWayId");

                    b.ToTable("One_way_flight_model");
                });

            modelBuilder.Entity("My_Fight_APP.Models.FlightModelRoundTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightModelId")
                        .HasColumnType("int");

                    b.Property<int?>("Flight_ModelsId")
                        .HasColumnType("int");

                    b.Property<int?>("RoundTicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Flight_ModelsId");

                    b.HasIndex("RoundTicketId");

                    b.ToTable("Round_Ticket_Flight_model");
                });

            modelBuilder.Entity("My_Fight_APP.Models.Flight_Models", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Destination")
                        .HasColumnType("int");

                    b.Property<string>("Flight_duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flight_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<int?>("One_Way_TicketsId")
                        .HasColumnType("int");

                    b.Property<int?>("Round_TicketsId")
                        .HasColumnType("int");

                    b.Property<string>("TakeOffTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Travel_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("flight_Categories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("One_Way_TicketsId");

                    b.HasIndex("Round_TicketsId");

                    b.ToTable("Flight_Models");
                });

            modelBuilder.Entity("My_Fight_APP.Models.One_way_Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("One_Way_Tickets");
                });

            modelBuilder.Entity("My_Fight_APP.Models.Round_ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Return_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stay_duration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("round_Tickets");
                });

            modelBuilder.Entity("My_Fight_APP.Models.FlightModelOneWay", b =>
                {
                    b.HasOne("My_Fight_APP.Models.Flight_Models", "Flight_")
                        .WithMany()
                        .HasForeignKey("Flight_Id");

                    b.HasOne("My_Fight_APP.Models.One_way_Ticket", "OneWay")
                        .WithMany()
                        .HasForeignKey("OneWayId");
                });

            modelBuilder.Entity("My_Fight_APP.Models.FlightModelRoundTicket", b =>
                {
                    b.HasOne("My_Fight_APP.Models.Flight_Models", "Flight_Models")
                        .WithMany()
                        .HasForeignKey("Flight_ModelsId");

                    b.HasOne("My_Fight_APP.Models.Round_ticket", "RoundTicket")
                        .WithMany()
                        .HasForeignKey("RoundTicketId");
                });

            modelBuilder.Entity("My_Fight_APP.Models.Flight_Models", b =>
                {
                    b.HasOne("My_Fight_APP.Models.One_way_Ticket", "One_Way_Tickets")
                        .WithMany("Flight_model_collection")
                        .HasForeignKey("One_Way_TicketsId");

                    b.HasOne("My_Fight_APP.Models.Round_ticket", "Round_Tickets")
                        .WithMany("Flight_model_collection")
                        .HasForeignKey("Round_TicketsId");
                });
#pragma warning restore 612, 618
        }
    }
}
